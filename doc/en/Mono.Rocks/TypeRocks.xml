<Type Name="TypeRocks" FullName="Mono.Rocks.TypeRocks">
  <TypeSignature Language="C#" Value="public static class TypeRocks" />
  <AssemblyInfo>
    <AssemblyName>Mono.Rocks</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      Extension methods for <see cref="T:System.Type" />.
    </summary>
    <remarks>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public static bool IsNullable (this Type self);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="self" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="self">
          A <see cref="T:System.Type" /> containing the type to check.
        </param>
        <summary>
          Gets a value indicating whether the type is a nullable type.
        </summary>
        <returns>
          <see langword="true" /> if <paramref name="self" /> is a
          <see cref="T:System.Nullable{T}" /> type; otherwise,
          <see langword="false" />.
        </returns>
        <remarks>
          <para>
            <paramref name="self" /> is considered to a nullable type if:
          </para>
          <list type="bullet">
            <item>
              <term>
                <paramref name="self" /> is not <c>typeof(Nullable&lt;&gt;).</c></term>
            </item>
            <item>
              <term>
                <c>
                  <paramref name="self" />.GetGenericTypeDefinition()</c> is
              <c>typeof(Nullable&lt;&gt;)</c>.
            </term>
            </item>
          </list>
          <code lang="C#" src="../../Tests/Mono.Rocks.Tests/TypeTest.cs#IsNullable">Assert.IsTrue (typeof (int?).IsNullable ());
Assert.IsFalse (typeof (int).IsNullable ());
Assert.IsFalse (typeof (string).IsNullable ());
Assert.IsFalse (typeof (Nullable&lt;&gt;).IsNullable ());
</code>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="self" /> is <see langword="null" />.
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
