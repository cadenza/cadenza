<Type Name="Either" FullName="Mono.Rocks.Either">
  <TypeSignature Language="C#" Value="public static class Either" />
  <AssemblyInfo>
    <AssemblyName>Mono.Rocks</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static Mono.Rocks.Either&lt;T,Exception&gt; TryParse&lt;T&gt; (string value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Rocks.Either&lt;T,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">To be added; from: <see cref="M:Mono.Rocks.Either.TryParse``2(``0)" />, <see cref="M:Mono.Rocks.Either`2.B(`1)" /></exception>
        <exception cref="T:System.NotSupportedException">To be added; from: <see cref="M:Mono.Rocks.Either.TryParse``2(``0)" />, <see cref="M:Mono.Rocks.Either`2.B(`1)" /></exception>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TSource,TResult&gt;">
      <MemberSignature Language="C#" Value="public static Mono.Rocks.Either&lt;TResult,Exception&gt; TryParse&lt;TSource,TResult&gt; (TSource value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Mono.Rocks.Either&lt;TResult,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TSource" />
      </Parameters>
      <Docs>
        <typeparam name="TSource">To be added.</typeparam>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">To be added; from: <see cref="M:Mono.Rocks.Either`2.B(`1)" /></exception>
        <exception cref="T:System.NotSupportedException">To be added; from: <see cref="M:Mono.Rocks.Either.TryParse``2(``0)" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
